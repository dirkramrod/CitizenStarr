
//------------------------------------------------------------------------------
//Star Citizen - ALPHA2.0
//------------------------------------------------------------------------------
//JS1 - FighterStick - FTR - FTRSTK
//JS2 - ProThrottle  - PROTHR
//JS3 - ProPedals    - PEDALS
//JS4 - FlightStick  - FLT - FLTSTK
//
//
// MODES:
// 1 - DEFAULT_MODE: Normal operations.
// 2 - TBD (RESERVED PROTHRMODE)
// 3 - TBD (RESERVED PROTHRMODE)
// 4 - SLOW_MODE: Aim steady toggle mode
//
// OTHER POSSIBLE SUBMODES: FTR_GRN FTR_RED FTR_AMB (NOT CONFIGURED BUT MODE SELCTION DEFINITIONS EXIST)
//
script

//CM DEVICE 1 Axis A1-A8 Friendly Names
%DEFINE YAW	 	  	 CMS.A1
%DEFINE PITCH	  	 CMS.A2
%DEFINE LONGITUDINAL CMS.A3
%DEFINE ROLL 	  	 CMS.A4
%DEFINE VERTICAL 	 CMS.A5
%DEFINE LATERAL 	 CMS.A6

//STRAFE BUTTON FRIENDLY NAMES
%DEFINE STRAFE_UP	CMS.B27
%DEFINE STRAFE_RT 	CMS.B24
%DEFINE STRAFE_DN	CMS.B25
%DEFINE STRAFE_LF	CMS.B26

//------------------------------------------------------------------
//BUTTON FRIENDLY NAMES
//------------------------------------------------------------------

//JS1 - FighterStick - FTR - FTRSTK
%DEFINE FTR_TRIGGER  JS1.B1
%DEFINE FTR_RED2     JS1.B2
%DEFINE FTR_MODE     JS1.B3
%DEFINE FTR_PINKY    JS1.B4
%DEFINE FTR_HAT1_UP  JS1.B5
%DEFINE FTR_HAT1_RT  JS1.B6
%DEFINE FTR_HAT1_DN  JS1.B7
%DEFINE FTR_HAT1_LF  JS1.B8
%DEFINE FTR_HAT2_UP  JS1.B9
%DEFINE FTR_HAT2_RT  JS1.B10
%DEFINE FTR_HAT2_DN  JS1.B11
%DEFINE FTR_HAT2_LF  JS1.B12
%DEFINE FTR_HAT3_UP  JS1.B13
%DEFINE FTR_HAT3_RT  JS1.B14
%DEFINE FTR_HAT3_DN  JS1.B15
%DEFINE FTR_HAT3_LF  JS1.B16
%DEFINE FTR_POV_UP   JS1.B25
%DEFINE FTR_POV_RT   JS1.B27
%DEFINE FTR_POV_DN   JS1.B29
%DEFINE FTR_POV_LF   JS1.B31

//S2 - ProThrottle  - PROTHR
%DEFINE THR_MODE     JS2.B1
%DEFINE THR_HANDLE2  JS2.B2
%DEFINE THR_HANDLE3  JS2.B3
%DEFINE THR_HANDLE4  JS2.B4
%DEFINE THR_HAT1_DN  JS2.B5
%DEFINE THR_HAT1_RT  JS2.B6
%DEFINE THR_HAT1_UP  JS2.B7
%DEFINE THR_HAT1_LF  JS2.B8
%DEFINE THR_HAT2_RT  JS2.B9
%DEFINE THR_HAT2_DN  JS2.B10
%DEFINE THR_HAT2_LF  JS2.B11
%DEFINE THR_HAT2_UP  JS2.B12
%DEFINE THR_HAT3_RT  JS2.B13
%DEFINE THR_HAT3_DN  JS2.B14
%DEFINE THR_HAT3_LF  JS2.B15
%DEFINE THR_HAT3_UP  JS2.B16
%DEFINE THR_POV_UP   JS2.B25
%DEFINE THR_POV_DN   JS2.B27
%DEFINE THR_POV_LF   JS2.B29
%DEFINE THR_POV_RT   JS2.B31

//JS4 - FlightStick  - FLT - FLTSTK
//%DEFINE FLT_TRIGGER  JS3.B1
//%DEFINE FLT_LF_BTN   JS3.B2
//%DEFINE FLT_RT_BTN   JS3.B3
//%DEFINE FLT_CT_BTN   JS3.B4
//%DEFINE FLT_POV_UP   JS4.B25
//%DEFINE FLT_POV_DN   JS4.B27
//%DEFINE FLT_POV_LF   JS4.B29
//%DEFINE FLT_POV_RT   JS4.B31

//CMS BUTTON FRIENDLY NAMES
%DEFINE VIEW_BUTTON CMS.B66

//------------------------------------------------------------------------------
//AXIS FRIENDLY NAMES
//------------------------------------------------------------------------------
//CM DEVICE 1 - JS1 - FighterStick - FTRSTK
%DEFINE X_FTRSTK JS1.A1
%DEFINE Y_FTRSTK JS1.A2
%DEFINE Z_FTRSTK JS1.A3
//CM DEVICE 1 - JS2 - ProThrottle  - PROTHR
%DEFINE X_PROTHR JS2.A1
%DEFINE Y_PROTHR JS2.A2
//%DEFINE Z_PROTHR JS2.A3 - modded out
//CM DEVICE 1 - JS3 - ProPedals    - PEDALS
%DEFINE X_PEDALS JS3.A1
%DEFINE Y_PEDALS JS3.A2
%DEFINE Z_PEDALS JS3.A3
//CM DEVICE 1 - JS4 - FlightStick  - FLTSTK
%DEFINE X_FLTSTK JS4.A1
%DEFINE Y_FLTSTK JS4.A2
%DEFINE Z_FLTSTK JS4.A3

//MODE SWITCH BITS
%DEFINE AUX_MODE 	B54
%DEFINE BULLET_TIME B55
%DEFINE RESET_AXIS 	B56
%DEFINE AXIS_SWAP	B57

//--future view mode toggle to swap third person to cockipit in sequence instead of three clicks to return from third.
%DEFINE VIEW_MODE1 	B58
%DEFINE VIEW_MODE2 	B59
%DEFINE VIEW_SWITCH B60

//CM MODES
%DEFINE DEFAULT_MODE 	[CURRENTMODE == MODE1]		//MODE1
%DEFINE PROTHRMODE2  	[CURRENTMODE == MODE2]		//MODE2
%DEFINE PROTHRMODE3 	[CURRENTMODE == MODE3]		//MODE3
%DEFINE SLOW_MODE		[CURRENTMODE == MODE4]		//MODE4

//SPECIAL MODES - TBD
//LED VALUES
%DEFINE GREENLED 0
%DEFINE REDLED 1
%DEFINE AMBERLED 2
//PROTHRMODE
%DEFINE THR_GRN [PROTHRMODE == GREENLED]  	//MODE1
%DEFINE THR_RED [PROTHRMODE == REDLED]      //MODE2
%DEFINE THR_AMB [PROTHRMODE == AMBERLED]  	//MODE3
//FTRSTKMODE
%DEFINE FTR_GRN [FTRSTKMODE == GREENLED]  	
%DEFINE FTR_RED [FTRSTKMODE == REDLED]   	
%DEFINE FTR_AMB [FTRSTKMODE == AMBERLED]  	

//------------------------------------------------------------------
//DO STUFF!
//------------------------------------------------------------------

//PRESS THE THROTTLE MINISTICK BUTTON TO CHANGE PROTHRMODE
//	MODES 2/3 TBD - UNCOMMENT TO ENABLE MODE SWITCH.
SEQUENCE
WAIT( THR_MODE );
	CURRENTMODE = PROTHRMODE;
ENDSEQUENCE

//----------------------------------------------------------------------------
//BULLET TIME: MODE 4 - LOW SENSITIVITY FOR AIMING
//----------------------------------------------------------------------------
SEQUENCE
WAIT( FTR_MODE );
	BULLET_TIME = NOT BULLET_TIME;
	IF (BULLET_TIME) THEN
	CURRENTMODE = 3;
	ELSE
	CURRENTMODE = PROTHRMODE;
	ENDIF
ENDSEQUENCE

//----------------------------------------------------------------------------
//DEFAULT AXIS SETTING
//----------------------------------------------------------------------------
	YAW			 = X_FTRSTK;
	PITCH		 = Y_FTRSTK;
	ROLL		 = Z_PEDALS;
	LATERAL		 = X_FLTSTK;
	VERTICAL	 = 128;
	

//----------------------------------------------------------------------------
//BUTTON MAPPINGS
//----------------------------------------------------------------------------
IF( FTR_PINKY ) THEN
	//SHIFTED JOYSTICK MAPPINGS
	CMS.B34 = FTR_RED2;
	CMS.B33 = FTR_TRIGGER;

	//CMS.B35 =
	//CMS.B36 =
	CMS.B37 = FTR_HAT1_UP;
	CMS.B38 = FTR_HAT1_RT;
	CMS.B39 = FTR_HAT1_DN;
	CMS.B40 = FTR_HAT1_LF;
	CMS.B41 = FTR_HAT2_UP;
	CMS.B42 = FTR_HAT2_RT;
	CMS.B43 = FTR_HAT2_DN;
	CMS.B44 = FTR_HAT2_LF;
	CMS.B45 = FTR_HAT3_UP;
	CMS.B46 = FTR_HAT3_RT;
	CMS.B47 = FTR_HAT3_DN;
	CMS.B48 = FTR_HAT3_LF;
//	CMS.B49 = THR_HANDLE2;
	CMS.B50 = THR_HANDLE3;
//	CMS.B51 = THR_HANDLE4;
	CMS.B52 = THR_HAT1_DN;
	CMS.B53 = THR_HAT1_RT;
	CMS.B54 = THR_HAT1_UP;
	CMS.B55 = THR_HAT1_LF;
	CMS.B56 = THR_HAT2_RT;
	CMS.B57 = THR_HAT2_DN;
	CMS.B58 = THR_HAT2_LF;
	CMS.B59 = THR_HAT2_UP;
	CMS.B60 = THR_HAT3_RT;
	CMS.B61 = THR_HAT3_DN;
	CMS.B62 = THR_HAT3_LF;
	CMS.B63 = THR_HAT3_UP;
	CMS.B69   = THR_POV_UP;
	CMS.B70   = THR_POV_RT;
	CMS.B71   = THR_POV_DN;
	CMS.B72   = THR_POV_LF;
	CMS.B65   = FTR_POV_UP;
	CMS.B66   = FTR_POV_RT;
	CMS.B67   = FTR_POV_DN;
	CMS.B68   = FTR_POV_LF; //CAN USE REGULAR VIEW CYCLE FUNCTION IN SHIFT MODE
	
	ELSE //DEFAULT WHEN NOT PRESSED
	
		//FIGHTERSTICK

	CMS.B1    = FTR_TRIGGER;
	CMS.B2    = FTR_RED2;
//	CMS.B3    = FLT_LF_BTN;
//	CMS.B4    = FLT_RT_BTN;
	CMS.B5    = FTR_HAT1_UP;
	CMS.B6    = FTR_HAT1_RT;
	CMS.B7    = FTR_HAT1_DN;
	CMS.B8    = FTR_HAT1_LF;
	CMS.B9    = FTR_HAT2_UP;
	CMS.B10   = FTR_HAT2_RT;
	CMS.B11   = FTR_HAT2_DN;
	CMS.B12   = FTR_HAT2_LF;
	CMS.B13   = FTR_HAT3_UP;
	CMS.B14   = FTR_HAT3_RT;
	CMS.B15   = FTR_HAT3_DN;
	CMS.B16   = FTR_HAT3_LF;
	CMS.B65   = FTR_POV_UP;
	CMS.B66   = FTR_POV_RT;
	CMS.B67   = FTR_POV_DN;

//	CMS.B68   = FTR_POV_LF;  //Use shifted for third person view toggle
	
	//PROTHROTTLE
	CMS.B17   = THR_HANDLE2;
	CMS.B18   = THR_HANDLE3;
	CMS.B19   = THR_HANDLE4;
	CMS.B20   = THR_HAT1_DN;
	CMS.B21   = THR_HAT1_RT;
	CMS.B22   = THR_HAT1_UP;
	CMS.B23   = THR_HAT1_LF;
	CMS.B24   = THR_HAT2_RT;
	CMS.B25   = THR_HAT2_DN;
	CMS.B26   = THR_HAT2_LF;
	CMS.B27   = THR_HAT2_UP;
	CMS.B28   = THR_HAT3_RT;
	CMS.B29   = THR_HAT3_DN;
	CMS.B30   = THR_HAT3_LF;
	CMS.B31   = THR_HAT3_UP;
	CMS.B69   = THR_POV_UP;
	CMS.B70   = THR_POV_RT;
	CMS.B71   = THR_POV_DN;
	CMS.B72   = THR_POV_LF;

	//FLIGHTSTICK
	// FLT_TRIGGER;
	// FLT_LF_BTN;
	// FLT_RT_BTN;
	// FLT_CT_BTN;
	// FLT_CT_BTN;
	
ENDIF

//Center LONGITUDINAL Axis when middle throttle handle button held
	IF ( THR_HANDLE3 )THEN
	LONGITUDINAL = 128;
	ELSE
	LONGITUDINAL = Y_FLTSTK;
	ENDIF
	
	
//----------------------------------------------------------------------------
//AXIS SWAP - WHILE hole Pinky Button on Throttle handle (THR_HANDLE4)
//the FIGHTERSTICK controls LATERAL and VERTICAL strafe
SEQUENCE
WHILE( THR_HANDLE4 );
	VERTICAL	 = Y_FLTSTK;
	LONGITUDINAL = 128;
ENDSEQUENCE

//Center strafe axis when braking.
//Can use Brake + Afterburner (THR_HAT3_RT AND THR_HANDLE2) for maximum stoppage.
SEQUENCE
WHILE( THR_HAT3_RT );
	LONGITUDINAL = 128;
ENDSEQUENCE

//--------------------------------------------------
//FUNCTIONS
//--------------------------------------------------

//WEAPON FUNCTIONS

//LANDING CONTROL

//DEFENSIVE SYSTEMS

//POWER MANAGEMENT



endScript
